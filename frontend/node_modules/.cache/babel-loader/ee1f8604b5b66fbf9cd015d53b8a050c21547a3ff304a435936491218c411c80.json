{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surya\\\\OneDrive\\\\Documents\\\\halleyx\\\\frontend\\\\src\\\\components\\\\AIChatWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AIChatWidget = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: 'Hello! How can I assist you today?',\n    fromUser: false\n  }]);\n  const [inputText, setInputText] = useState('');\n  const [isVisible, setIsVisible] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [isSupported, setIsSupported] = useState(false);\n  const [recognition, setRecognition] = useState(null); // recognition state\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Memoize addMessage\n  const addMessage = useCallback((text, fromUser = true) => {\n    setMessages(prev => [...prev, {\n      text,\n      fromUser\n    }]);\n  }, []); // setMessages is guaranteed to be stable\n\n  // Memoize handleBotResponse, moving botResponse logic inside\n  const handleBotResponse = useCallback(userText => {\n    // Simple bot response logic - moved inside useCallback\n    const botResponseLogic = message => {\n      const msg = message.toLowerCase();\n      if (msg.includes('hello') || msg.includes('hi')) {\n        return 'Hello! How can I assist you today?';\n      }\n      if (msg.includes('product')) {\n        return 'You can browse products in the Customer Portal under \"Browse Products\".';\n      }\n      if (msg.includes('order')) {\n        return 'You can place orders by adding products to your cart and checking out.';\n      }\n      if (msg.includes('help')) {\n        return 'I am here to help! Ask me about products, orders, or your account.';\n      }\n      return \"Sorry, I didn't understand that. Please try asking something else.\";\n    };\n    setTimeout(() => {\n      const reply = botResponseLogic(userText);\n      addMessage(reply, false);\n    }, 500);\n  }, [addMessage]); // addMessage is a dependency, as it's used inside\n\n  useEffect(() => {\n    // Check if Web Speech API is supported\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognitionInstance = new SpeechRecognition();\n      recognitionInstance.continuous = false;\n      recognitionInstance.interimResults = false;\n      recognitionInstance.lang = 'en-US';\n      recognitionInstance.onresult = function (event) {\n        const transcript = event.results[0][0].transcript;\n        addMessage(transcript, true);\n        handleBotResponse(transcript); // This is where the dependency is needed\n        setIsListening(false);\n      };\n      recognitionInstance.onerror = function (event) {\n        console.error('Voice recognition error:', event.error);\n        setIsListening(false);\n      };\n      recognitionInstance.onend = function () {\n        setIsListening(false);\n      };\n      setRecognition(recognitionInstance);\n      setIsSupported(true);\n    } else {\n      setIsSupported(false);\n    }\n\n    // Cleanup function for useEffect\n    // This runs when the component unmounts or before the effect re-runs if dependencies change\n    return () => {\n      if (recognition) {\n        // 'recognition' is now a dependency\n        recognition.stop();\n        // Remove event listeners to prevent memory leaks and ensure clean shutdown\n        recognition.onresult = null;\n        recognition.onerror = null;\n        recognition.onend = null;\n      }\n    };\n  }, [addMessage, handleBotResponse, recognition]); // Added recognition to dependency array\n\n  const handleSend = () => {\n    const userText = inputText.trim();\n    if (!userText) return;\n    addMessage(userText, true);\n    setInputText('');\n    handleBotResponse(userText);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSend();\n    }\n  };\n  const toggleListening = () => {\n    if (!isSupported || !recognition) return;\n    if (isListening) {\n      recognition.stop();\n    } else {\n      recognition.start();\n      setIsListening(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsVisible(!isVisible),\n      style: {\n        position: 'fixed',\n        bottom: '20px',\n        right: '20px',\n        width: '60px',\n        height: '60px',\n        borderRadius: '50%',\n        border: 'none',\n        background: 'var(--primary)',\n        color: '#000',\n        fontSize: '24px',\n        cursor: 'pointer',\n        zIndex: 10001,\n        boxShadow: '0 0 15px var(--primary-glow)'\n      },\n      title: \"Toggle Chat\",\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), isSupported && isVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleListening,\n      title: isListening ? 'Stop Voice Command' : 'Voice Command',\n      style: {\n        position: 'fixed',\n        bottom: '90px',\n        right: '20px',\n        width: '48px',\n        height: '48px',\n        borderRadius: '50%',\n        border: 'none',\n        background: isListening ? 'var(--secondary)' : 'var(--primary)',\n        color: '#000',\n        fontSize: '24px',\n        cursor: 'pointer',\n        zIndex: 10001,\n        boxShadow: isListening ? '0 0 20px var(--secondary-glow)' : '0 0 15px var(--primary-glow)',\n        transition: 'all 0.3s ease'\n      },\n      children: isListening ? 'ðŸ”´' : 'ðŸŽ¤'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        bottom: '140px',\n        right: '20px',\n        width: '300px',\n        height: '400px',\n        background: 'rgba(13,17,23,0.95)',\n        border: '2px solid var(--primary)',\n        borderRadius: '12px',\n        boxShadow: '0 0 15px var(--primary-glow)',\n        color: 'var(--text-main)',\n        display: 'flex',\n        flexDirection: 'column',\n        zIndex: 10000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '10px',\n          background: 'var(--primary)',\n          color: '#000',\n          fontWeight: 'bold',\n          textAlign: 'center',\n          borderRadius: '10px 10px 0 0'\n        },\n        children: \"Sowndhar's E-market\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1,\n          padding: '10px',\n          overflowY: 'auto',\n          fontSize: '0.9rem',\n          maxHeight: '300px'\n        },\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '8px',\n            padding: '6px 10px',\n            borderRadius: '12px',\n            maxWidth: '80%',\n            wordWrap: 'break-word',\n            background: message.fromUser ? 'var(--secondary)' : 'var(--primary)',\n            color: '#000',\n            alignSelf: message.fromUser ? 'flex-end' : 'flex-start',\n            marginLeft: message.fromUser ? 'auto' : '0',\n            marginRight: message.fromUser ? '0' : 'auto'\n          },\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          padding: '10px',\n          borderTop: '1px solid var(--primary)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          onKeyPress: handleKeyPress,\n          style: {\n            flexGrow: 1,\n            padding: '8px',\n            borderRadius: '8px',\n            border: '1px solid var(--primary)',\n            background: 'var(--input-bg)',\n            color: 'var(--text-main)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          style: {\n            marginLeft: '8px',\n            padding: '8px 12px',\n            borderRadius: '8px',\n            border: 'none',\n            background: 'var(--primary)',\n            color: '#000',\n            fontWeight: 'bold',\n            cursor: 'pointer'\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(AIChatWidget, \"XVsQrLcRSJu0Lu/BU58gsTGV+ZE=\");\n_c = AIChatWidget;\nexport default AIChatWidget;\nvar _c;\n$RefreshReg$(_c, \"AIChatWidget\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","AIChatWidget","_s","messages","setMessages","text","fromUser","inputText","setInputText","isVisible","setIsVisible","isListening","setIsListening","isSupported","setIsSupported","recognition","setRecognition","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","addMessage","prev","handleBotResponse","userText","botResponseLogic","message","msg","toLowerCase","includes","setTimeout","reply","window","SpeechRecognition","webkitSpeechRecognition","recognitionInstance","continuous","interimResults","lang","onresult","event","transcript","results","onerror","console","error","onend","stop","handleSend","trim","handleKeyPress","e","key","toggleListening","start","children","onClick","style","position","bottom","right","width","height","borderRadius","border","background","color","fontSize","cursor","zIndex","boxShadow","title","fileName","_jsxFileName","lineNumber","columnNumber","transition","display","flexDirection","padding","fontWeight","textAlign","flexGrow","overflowY","maxHeight","map","index","marginBottom","maxWidth","wordWrap","alignSelf","marginLeft","marginRight","ref","borderTop","type","placeholder","value","onChange","target","onKeyPress","_c","$RefreshReg$"],"sources":["C:/Users/surya/OneDrive/Documents/halleyx/frontend/src/components/AIChatWidget.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\r\n\r\nconst AIChatWidget = () => {\r\n  const [messages, setMessages] = useState([\r\n    { text: 'Hello! How can I assist you today?', fromUser: false }\r\n  ]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isSupported, setIsSupported] = useState(false);\r\n  const [recognition, setRecognition] = useState(null); // recognition state\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // Memoize addMessage\r\n  const addMessage = useCallback((text, fromUser = true) => {\r\n    setMessages(prev => [...prev, { text, fromUser }]);\r\n  }, []); // setMessages is guaranteed to be stable\r\n\r\n  // Memoize handleBotResponse, moving botResponse logic inside\r\n  const handleBotResponse = useCallback((userText) => {\r\n    // Simple bot response logic - moved inside useCallback\r\n    const botResponseLogic = (message) => {\r\n      const msg = message.toLowerCase();\r\n      if (msg.includes('hello') || msg.includes('hi')) {\r\n        return 'Hello! How can I assist you today?';\r\n      }\r\n      if (msg.includes('product')) {\r\n        return 'You can browse products in the Customer Portal under \"Browse Products\".';\r\n      }\r\n      if (msg.includes('order')) {\r\n        return 'You can place orders by adding products to your cart and checking out.';\r\n      }\r\n      if (msg.includes('help')) {\r\n        return 'I am here to help! Ask me about products, orders, or your account.';\r\n      }\r\n      return \"Sorry, I didn't understand that. Please try asking something else.\";\r\n    };\r\n\r\n    setTimeout(() => {\r\n      const reply = botResponseLogic(userText);\r\n      addMessage(reply, false);\r\n    }, 500);\r\n  }, [addMessage]); // addMessage is a dependency, as it's used inside\r\n\r\n  useEffect(() => {\r\n    // Check if Web Speech API is supported\r\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\r\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n      const recognitionInstance = new SpeechRecognition();\r\n\r\n      recognitionInstance.continuous = false;\r\n      recognitionInstance.interimResults = false;\r\n      recognitionInstance.lang = 'en-US';\r\n\r\n      recognitionInstance.onresult = function(event) {\r\n        const transcript = event.results[0][0].transcript;\r\n        addMessage(transcript, true);\r\n        handleBotResponse(transcript); // This is where the dependency is needed\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognitionInstance.onerror = function(event) {\r\n        console.error('Voice recognition error:', event.error);\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognitionInstance.onend = function() {\r\n        setIsListening(false);\r\n      };\r\n\r\n      setRecognition(recognitionInstance);\r\n      setIsSupported(true);\r\n    } else {\r\n      setIsSupported(false);\r\n    }\r\n\r\n    // Cleanup function for useEffect\r\n    // This runs when the component unmounts or before the effect re-runs if dependencies change\r\n    return () => {\r\n      if (recognition) { // 'recognition' is now a dependency\r\n        recognition.stop();\r\n        // Remove event listeners to prevent memory leaks and ensure clean shutdown\r\n        recognition.onresult = null;\r\n        recognition.onerror = null;\r\n        recognition.onend = null;\r\n      }\r\n    };\r\n  }, [addMessage, handleBotResponse, recognition]); // Added recognition to dependency array\r\n\r\n  const handleSend = () => {\r\n    const userText = inputText.trim();\r\n    if (!userText) return;\r\n\r\n    addMessage(userText, true);\r\n    setInputText('');\r\n    handleBotResponse(userText);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  const toggleListening = () => {\r\n    if (!isSupported || !recognition) return;\r\n\r\n    if (isListening) {\r\n      recognition.stop();\r\n    } else {\r\n      recognition.start();\r\n      setIsListening(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Toggle Button */}\r\n      <button\r\n        onClick={() => setIsVisible(!isVisible)}\r\n        style={{\r\n          position: 'fixed',\r\n          bottom: '20px',\r\n          right: '20px',\r\n          width: '60px',\r\n          height: '60px',\r\n          borderRadius: '50%',\r\n          border: 'none',\r\n          background: 'var(--primary)',\r\n          color: '#000',\r\n          fontSize: '24px',\r\n          cursor: 'pointer',\r\n          zIndex: 10001,\r\n          boxShadow: '0 0 15px var(--primary-glow)'\r\n        }}\r\n        title=\"Toggle Chat\"\r\n      >\r\n        ðŸ’¬\r\n      </button>\r\n\r\n      {/* Voice Assist Button */}\r\n      {isSupported && isVisible && (\r\n        <button\r\n          onClick={toggleListening}\r\n          title={isListening ? 'Stop Voice Command' : 'Voice Command'}\r\n          style={{\r\n            position: 'fixed',\r\n            bottom: '90px',\r\n            right: '20px',\r\n            width: '48px',\r\n            height: '48px',\r\n            borderRadius: '50%',\r\n            border: 'none',\r\n            background: isListening ? 'var(--secondary)' : 'var(--primary)',\r\n            color: '#000',\r\n            fontSize: '24px',\r\n            cursor: 'pointer',\r\n            zIndex: 10001,\r\n            boxShadow: isListening\r\n              ? '0 0 20px var(--secondary-glow)'\r\n              : '0 0 15px var(--primary-glow)',\r\n            transition: 'all 0.3s ease'\r\n          }}\r\n        >\r\n          {isListening ? 'ðŸ”´' : 'ðŸŽ¤'}\r\n        </button>\r\n      )}\r\n\r\n      {/* Chat Widget */}\r\n      {isVisible && (\r\n        <div\r\n          style={{\r\n            position: 'fixed',\r\n            bottom: '140px',\r\n            right: '20px',\r\n            width: '300px',\r\n            height: '400px',\r\n            background: 'rgba(13,17,23,0.95)',\r\n            border: '2px solid var(--primary)',\r\n            borderRadius: '12px',\r\n            boxShadow: '0 0 15px var(--primary-glow)',\r\n            color: 'var(--text-main)',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            zIndex: 10000\r\n          }}\r\n        >\r\n          {/* Header */}\r\n          <div\r\n            style={{\r\n              padding: '10px',\r\n              background: 'var(--primary)',\r\n              color: '#000',\r\n              fontWeight: 'bold',\r\n              textAlign: 'center',\r\n              borderRadius: '10px 10px 0 0'\r\n            }}\r\n          >\r\n          Sowndhar's E-market\r\n          </div>\r\n\r\n          {/* Messages */}\r\n          <div\r\n            style={{\r\n              flexGrow: 1,\r\n              padding: '10px',\r\n              overflowY: 'auto',\r\n              fontSize: '0.9rem',\r\n              maxHeight: '300px'\r\n            }}\r\n          >\r\n            {messages.map((message, index) => (\r\n              <div\r\n                key={index}\r\n                style={{\r\n                  marginBottom: '8px',\r\n                  padding: '6px 10px',\r\n                  borderRadius: '12px',\r\n                  maxWidth: '80%',\r\n                  wordWrap: 'break-word',\r\n                  background: message.fromUser ? 'var(--secondary)' : 'var(--primary)',\r\n                  color: '#000',\r\n                  alignSelf: message.fromUser ? 'flex-end' : 'flex-start',\r\n                  marginLeft: message.fromUser ? 'auto' : '0',\r\n                  marginRight: message.fromUser ? '0' : 'auto'\r\n                }}\r\n              >\r\n                {message.text}\r\n              </div>\r\n            ))}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n\r\n          {/* Input */}\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              padding: '10px',\r\n              borderTop: '1px solid var(--primary)'\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Type your message...\"\r\n              value={inputText}\r\n              onChange={(e) => setInputText(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              style={{\r\n                flexGrow: 1,\r\n                padding: '8px',\r\n                borderRadius: '8px',\r\n                border: '1px solid var(--primary)',\r\n                background: 'var(--input-bg)',\r\n                color: 'var(--text-main)'\r\n              }}\r\n            />\r\n            <button\r\n              onClick={handleSend}\r\n              style={{\r\n                marginLeft: '8px',\r\n                padding: '8px 12px',\r\n                borderRadius: '8px',\r\n                border: 'none',\r\n                background: 'var(--primary)',\r\n                color: '#000',\r\n                fontWeight: 'bold',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AIChatWidget;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}