{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surya\\\\OneDrive\\\\Documents\\\\halleyx\\\\frontend\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState({});\n  const addToCart = productId => {\n    setCart(prevCart => ({\n      ...prevCart,\n      [productId]: (prevCart[productId] || 0) + 1\n    }));\n  };\n  const removeFromCart = productId => {\n    setCart(prevCart => {\n      const newCart = {\n        ...prevCart\n      };\n      if (newCart[productId] > 1) {\n        newCart[productId] -= 1;\n      } else {\n        delete newCart[productId];\n      }\n      return newCart;\n    });\n  };\n  const clearCart = () => {\n    setCart({});\n  };\n  const getCartItemCount = () => {\n    return Object.values(cart).reduce((total, quantity) => total + quantity, 0);\n  };\n  const getCartTotal = () => {\n    return Object.entries(cart).reduce((total, [productId, quantity]) => {\n      // This would need to be calculated with actual product prices\n      // For now, return the count\n      return total + quantity;\n    }, 0);\n  };\n  const value = {\n    cart,\n    addToCart,\n    removeFromCart,\n    clearCart,\n    getCartItemCount,\n    getCartTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"NFGnZJXrHtOOeNPI2HX7AhtE0sQ=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","CartContext","useCart","_s","context","Error","CartProvider","children","_s2","cart","setCart","addToCart","productId","prevCart","removeFromCart","newCart","clearCart","getCartItemCount","Object","values","reduce","total","quantity","getCartTotal","entries","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/surya/OneDrive/Documents/halleyx/frontend/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState({});\r\n\r\n  const addToCart = (productId) => {\r\n    setCart(prevCart => ({\r\n      ...prevCart,\r\n      [productId]: (prevCart[productId] || 0) + 1\r\n    }));\r\n  };\r\n\r\n  const removeFromCart = (productId) => {\r\n    setCart(prevCart => {\r\n      const newCart = { ...prevCart };\r\n      if (newCart[productId] > 1) {\r\n        newCart[productId] -= 1;\r\n      } else {\r\n        delete newCart[productId];\r\n      }\r\n      return newCart;\r\n    });\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCart({});\r\n  };\r\n\r\n  const getCartItemCount = () => {\r\n    return Object.values(cart).reduce((total, quantity) => total + quantity, 0);\r\n  };\r\n\r\n  const getCartTotal = () => {\r\n    return Object.entries(cart).reduce((total, [productId, quantity]) => {\r\n      // This would need to be calculated with actual product prices\r\n      // For now, return the count\r\n      return total + quantity;\r\n    }, 0);\r\n  };\r\n\r\n  const value = {\r\n    cart,\r\n    addToCart,\r\n    removeFromCart,\r\n    clearCart,\r\n    getCartItemCount,\r\n    getCartTotal\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGP,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC,MAAMa,SAAS,GAAIC,SAAS,IAAK;IAC/BF,OAAO,CAACG,QAAQ,KAAK;MACnB,GAAGA,QAAQ;MACX,CAACD,SAAS,GAAG,CAACC,QAAQ,CAACD,SAAS,CAAC,IAAI,CAAC,IAAI;IAC5C,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,cAAc,GAAIF,SAAS,IAAK;IACpCF,OAAO,CAACG,QAAQ,IAAI;MAClB,MAAME,OAAO,GAAG;QAAE,GAAGF;MAAS,CAAC;MAC/B,IAAIE,OAAO,CAACH,SAAS,CAAC,GAAG,CAAC,EAAE;QAC1BG,OAAO,CAACH,SAAS,CAAC,IAAI,CAAC;MACzB,CAAC,MAAM;QACL,OAAOG,OAAO,CAACH,SAAS,CAAC;MAC3B;MACA,OAAOG,OAAO;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBN,OAAO,CAAC,CAAC,CAAC,CAAC;EACb,CAAC;EAED,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,OAAOC,MAAM,CAACC,MAAM,CAACV,IAAI,CAAC,CAACW,MAAM,CAAC,CAACC,KAAK,EAAEC,QAAQ,KAAKD,KAAK,GAAGC,QAAQ,EAAE,CAAC,CAAC;EAC7E,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,OAAOL,MAAM,CAACM,OAAO,CAACf,IAAI,CAAC,CAACW,MAAM,CAAC,CAACC,KAAK,EAAE,CAACT,SAAS,EAAEU,QAAQ,CAAC,KAAK;MACnE;MACA;MACA,OAAOD,KAAK,GAAGC,QAAQ;IACzB,CAAC,EAAE,CAAC,CAAC;EACP,CAAC;EAED,MAAMG,KAAK,GAAG;IACZhB,IAAI;IACJE,SAAS;IACTG,cAAc;IACdE,SAAS;IACTC,gBAAgB;IAChBM;EACF,CAAC;EAED,oBACEvB,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAlB,QAAA,EAChCA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,GAAA,CApDWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}