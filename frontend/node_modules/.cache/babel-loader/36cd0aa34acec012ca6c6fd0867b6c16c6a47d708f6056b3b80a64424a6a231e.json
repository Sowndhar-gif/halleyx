{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surya\\\\OneDrive\\\\Documents\\\\halleyx\\\\frontend\\\\src\\\\components\\\\OrderList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react'; // Added useCallback\nimport { useAuth } from '../contexts/AuthContext'; // Assuming you use useAuth for customer token\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderList = () => {\n  _s();\n  const {\n    currentCustomer\n  } = useAuth(); // Assuming you get customer info for orders\n  const [orders, setOrders] = useState([]);\n  const [loadingOrders, setLoadingOrders] = useState(true);\n  const [errorOrders, setErrorOrders] = useState('');\n  const [trackingInfo, setTrackingInfo] = useState({}); // Example for tracking info\n\n  // loadOrders function\n  const loadOrders = useCallback(async () => {\n    if (!(currentCustomer !== null && currentCustomer !== void 0 && currentCustomer.token)) {\n      // Assuming customer token is needed\n      setLoadingOrders(false);\n      return;\n    }\n    try {\n      setLoadingOrders(true);\n      const response = await fetch('/api/orders', {\n        headers: {\n          'Authorization': `Bearer ${currentCustomer.token}`\n        }\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to fetch orders');\n      }\n      setOrders(data);\n    } catch (err) {\n      setErrorOrders(err.message);\n    } finally {\n      setLoadingOrders(false);\n    }\n  }, [currentCustomer]); // Dependencies for loadOrders\n\n  // loadTrackingInfo function (example)\n  const loadTrackingInfo = useCallback(async orderId => {\n    // This function would likely take an orderId and fetch tracking details\n    // For demonstration, let's just simulate.\n    if (!(currentCustomer !== null && currentCustomer !== void 0 && currentCustomer.token)) {\n      return;\n    }\n    try {\n      // Simulate API call\n      // const response = await fetch(`/api/orders/${orderId}/tracking`, { /* headers */ });\n      // const data = await response.json();\n      setTrackingInfo(prev => ({\n        ...prev,\n        [orderId]: `Tracking info for ${orderId}`\n      }));\n    } catch (err) {\n      console.error(\"Error fetching tracking info:\", err);\n    }\n  }, [currentCustomer]); // Dependencies for loadTrackingInfo\n\n  useEffect(() => {\n    loadOrders();\n  }, [loadOrders]); // Dependency added for loadOrders\n\n  // This is a hypothetical second useEffect for loadTrackingInfo based on your error.\n  // You might have this tied to individual order display or another condition.\n  // I'm assuming it's related to fetching tracking for *all* orders after they load.\n  useEffect(() => {\n    // This part might vary greatly based on your actual implementation.\n    // If loadTrackingInfo is called for each order, you might iterate through orders.\n    // For now, just including it as per the error message.\n    // Example: orders.forEach(order => loadTrackingInfo(order.id));\n    // Or it might be triggered when an individual order is expanded.\n    // If it's not meant to run on component mount for all orders, you might remove this useEffect\n    // and call loadTrackingInfo elsewhere (e.g., inside an onClick handler).\n    // If it is meant to run based on some criteria, that criteria should be in dependencies.\n    // For now, I'll add it as if it's meant to be called at some point, and needs to be stable.\n    if (orders.length > 0) {\n      // This is a placeholder; you'd likely call loadTrackingInfo with an actual order ID.\n      // e.g., orders.forEach(order => loadTrackingInfo(order.id));\n    }\n  }, [loadTrackingInfo, orders]); // Dependencies added for loadTrackingInfo and orders\n\n  if (loadingOrders) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading orders...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }\n  if (errorOrders) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'var(--secondary)'\n      },\n      children: [\"Error: \", errorOrders]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n  if (orders.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No orders found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '1rem',\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Order ID: \", order.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", order.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total: $\", order.total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), trackingInfo[order.id] && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tracking: \", trackingInfo[order.id]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => loadTrackingInfo(order.id),\n        children: \"View Tracking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, order.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderList, \"Go60y3qLkYtzNJL4aOaifHZVMcQ=\", false, function () {\n  return [useAuth];\n});\n_c = OrderList;\nexport default OrderList;\nvar _c;\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useAuth","jsxDEV","_jsxDEV","OrderList","_s","currentCustomer","orders","setOrders","loadingOrders","setLoadingOrders","errorOrders","setErrorOrders","trackingInfo","setTrackingInfo","loadOrders","token","response","fetch","headers","data","json","ok","Error","message","err","loadTrackingInfo","orderId","prev","console","error","length","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","order","border","padding","marginBottom","id","status","total","onClick","_c","$RefreshReg$"],"sources":["C:/Users/surya/OneDrive/Documents/halleyx/frontend/src/components/OrderList.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'; // Added useCallback\r\nimport { useAuth } from '../contexts/AuthContext'; // Assuming you use useAuth for customer token\r\n\r\nconst OrderList = () => {\r\n  const { currentCustomer } = useAuth(); // Assuming you get customer info for orders\r\n  const [orders, setOrders] = useState([]);\r\n  const [loadingOrders, setLoadingOrders] = useState(true);\r\n  const [errorOrders, setErrorOrders] = useState('');\r\n  const [trackingInfo, setTrackingInfo] = useState({}); // Example for tracking info\r\n\r\n  // loadOrders function\r\n  const loadOrders = useCallback(async () => {\r\n    if (!currentCustomer?.token) { // Assuming customer token is needed\r\n      setLoadingOrders(false);\r\n      return;\r\n    }\r\n    try {\r\n      setLoadingOrders(true);\r\n      const response = await fetch('/api/orders', {\r\n        headers: {\r\n          'Authorization': `Bearer ${currentCustomer.token}`\r\n        }\r\n      });\r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Failed to fetch orders');\r\n      }\r\n      setOrders(data);\r\n    } catch (err) {\r\n      setErrorOrders(err.message);\r\n    } finally {\r\n      setLoadingOrders(false);\r\n    }\r\n  }, [currentCustomer]); // Dependencies for loadOrders\r\n\r\n  // loadTrackingInfo function (example)\r\n  const loadTrackingInfo = useCallback(async (orderId) => {\r\n    // This function would likely take an orderId and fetch tracking details\r\n    // For demonstration, let's just simulate.\r\n    if (!currentCustomer?.token) {\r\n        return;\r\n    }\r\n    try {\r\n        // Simulate API call\r\n        // const response = await fetch(`/api/orders/${orderId}/tracking`, { /* headers */ });\r\n        // const data = await response.json();\r\n        setTrackingInfo(prev => ({ ...prev, [orderId]: `Tracking info for ${orderId}` }));\r\n    } catch (err) {\r\n        console.error(\"Error fetching tracking info:\", err);\r\n    }\r\n  }, [currentCustomer]); // Dependencies for loadTrackingInfo\r\n\r\n\r\n  useEffect(() => {\r\n    loadOrders();\r\n  }, [loadOrders]); // Dependency added for loadOrders\r\n\r\n  // This is a hypothetical second useEffect for loadTrackingInfo based on your error.\r\n  // You might have this tied to individual order display or another condition.\r\n  // I'm assuming it's related to fetching tracking for *all* orders after they load.\r\n  useEffect(() => {\r\n    // This part might vary greatly based on your actual implementation.\r\n    // If loadTrackingInfo is called for each order, you might iterate through orders.\r\n    // For now, just including it as per the error message.\r\n    // Example: orders.forEach(order => loadTrackingInfo(order.id));\r\n    // Or it might be triggered when an individual order is expanded.\r\n    // If it's not meant to run on component mount for all orders, you might remove this useEffect\r\n    // and call loadTrackingInfo elsewhere (e.g., inside an onClick handler).\r\n    // If it is meant to run based on some criteria, that criteria should be in dependencies.\r\n    // For now, I'll add it as if it's meant to be called at some point, and needs to be stable.\r\n    if (orders.length > 0) {\r\n      // This is a placeholder; you'd likely call loadTrackingInfo with an actual order ID.\r\n      // e.g., orders.forEach(order => loadTrackingInfo(order.id));\r\n    }\r\n  }, [loadTrackingInfo, orders]); // Dependencies added for loadTrackingInfo and orders\r\n\r\n  if (loadingOrders) {\r\n    return <div>Loading orders...</div>;\r\n  }\r\n\r\n  if (errorOrders) {\r\n    return <div style={{ color: 'var(--secondary)' }}>Error: {errorOrders}</div>;\r\n  }\r\n\r\n  if (orders.length === 0) {\r\n    return <div>No orders found.</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Your Orders</h3>\r\n      {orders.map(order => (\r\n        <div key={order.id} style={{ border: '1px solid #ccc', padding: '1rem', marginBottom: '1rem' }}>\r\n          <h4>Order ID: {order.id}</h4>\r\n          <p>Status: {order.status}</p>\r\n          <p>Total: ${order.total}</p>\r\n          {/* Example of showing tracking info */}\r\n          {trackingInfo[order.id] && <p>Tracking: {trackingInfo[order.id]}</p>}\r\n          {/* Example button to load tracking info for a specific order */}\r\n          <button onClick={() => loadTrackingInfo(order.id)}>View Tracking</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO,CAAC,CAAC;AACjE,SAASC,OAAO,QAAQ,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAgB,CAAC,GAAGL,OAAO,CAAC,CAAC,CAAC,CAAC;EACvC,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEtD;EACA,MAAMiB,UAAU,GAAGf,WAAW,CAAC,YAAY;IACzC,IAAI,EAACM,eAAe,aAAfA,eAAe,eAAfA,eAAe,CAAEU,KAAK,GAAE;MAAE;MAC7BN,gBAAgB,CAAC,KAAK,CAAC;MACvB;IACF;IACA,IAAI;MACFA,gBAAgB,CAAC,IAAI,CAAC;MACtB,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;QAC1CC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUb,eAAe,CAACU,KAAK;QAClD;MACF,CAAC,CAAC;MACF,MAAMI,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClC,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,wBAAwB,CAAC;MAC3D;MACAhB,SAAS,CAACY,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZb,cAAc,CAACa,GAAG,CAACD,OAAO,CAAC;IAC7B,CAAC,SAAS;MACRd,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC,EAAE,CAACJ,eAAe,CAAC,CAAC,CAAC,CAAC;;EAEvB;EACA,MAAMoB,gBAAgB,GAAG1B,WAAW,CAAC,MAAO2B,OAAO,IAAK;IACtD;IACA;IACA,IAAI,EAACrB,eAAe,aAAfA,eAAe,eAAfA,eAAe,CAAEU,KAAK,GAAE;MACzB;IACJ;IACA,IAAI;MACA;MACA;MACA;MACAF,eAAe,CAACc,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACD,OAAO,GAAG,qBAAqBA,OAAO;MAAG,CAAC,CAAC,CAAC;IACrF,CAAC,CAAC,OAAOF,GAAG,EAAE;MACVI,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEL,GAAG,CAAC;IACvD;EACF,CAAC,EAAE,CAACnB,eAAe,CAAC,CAAC,CAAC,CAAC;;EAGvBP,SAAS,CAAC,MAAM;IACdgB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC,CAAC,CAAC;;EAElB;EACA;EACA;EACAhB,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAIQ,MAAM,CAACwB,MAAM,GAAG,CAAC,EAAE;MACrB;MACA;IAAA;EAEJ,CAAC,EAAE,CAACL,gBAAgB,EAAEnB,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEhC,IAAIE,aAAa,EAAE;IACjB,oBAAON,OAAA;MAAA6B,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrC;EAEA,IAAIzB,WAAW,EAAE;IACf,oBAAOR,OAAA;MAAKkC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAmB,CAAE;MAAAN,QAAA,GAAC,SAAO,EAACrB,WAAW;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC9E;EAEA,IAAI7B,MAAM,CAACwB,MAAM,KAAK,CAAC,EAAE;IACvB,oBAAO5B,OAAA;MAAA6B,QAAA,EAAK;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACpC;EAEA,oBACEjC,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnB7B,MAAM,CAACgC,GAAG,CAACC,KAAK,iBACfrC,OAAA;MAAoBkC,KAAK,EAAE;QAAEI,MAAM,EAAE,gBAAgB;QAAEC,OAAO,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAX,QAAA,gBAC7F7B,OAAA;QAAA6B,QAAA,GAAI,YAAU,EAACQ,KAAK,CAACI,EAAE;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7BjC,OAAA;QAAA6B,QAAA,GAAG,UAAQ,EAACQ,KAAK,CAACK,MAAM;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BjC,OAAA;QAAA6B,QAAA,GAAG,UAAQ,EAACQ,KAAK,CAACM,KAAK;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAE3BvB,YAAY,CAAC2B,KAAK,CAACI,EAAE,CAAC,iBAAIzC,OAAA;QAAA6B,QAAA,GAAG,YAAU,EAACnB,YAAY,CAAC2B,KAAK,CAACI,EAAE,CAAC;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEpEjC,OAAA;QAAQ4C,OAAO,EAAEA,CAAA,KAAMrB,gBAAgB,CAACc,KAAK,CAACI,EAAE,CAAE;QAAAZ,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAPjEI,KAAK,CAACI,EAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQb,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CArGID,SAAS;EAAA,QACeH,OAAO;AAAA;AAAA+C,EAAA,GAD/B5C,SAAS;AAuGf,eAAeA,SAAS;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}